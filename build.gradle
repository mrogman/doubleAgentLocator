buildscript {
  ext {
    springBootVersion = '1.3.2.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
      classpath 'org.springframework:springloaded:1.2.0.RELEASE'
  }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
  baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}


dependencies {
  compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.codehaus.groovy:groovy')
    compile('org.apache.commons:commons-csv:1.2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

idea {
  module {
    inheritOutputDirs = false
      outputDir = file("$buildDir/classes/main/")
  }
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
      containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.9'
}

task npmbuild(type: Exec) {
  commandLine "npm run build" //execute npm build script (runs webpack to package static assets)
}
